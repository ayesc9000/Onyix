<!--
 Onyix - An open-source Discord bot
 Copyright (C) 2022 Liam "AyesC" Hogan

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program. If not, see http://www.gnu.org/licenses/.
-->

<Project Sdk="Microsoft.NET.Sdk">

  <!-- Common properties -->
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net7.0</TargetFramework>
    <ImplicitUsings>disable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <UserSecretsId>02bb26d6-560d-4cbc-ac39-330d24171477</UserSecretsId>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
  </PropertyGroup>

  <!-- Windows properties -->
  <PropertyGroup Condition="'$(os)' == 'Windows_NT'">
    <DockerfileRunArguments>-v $(APPDATA)/Microsoft/UserSecrets/$(UserSecretsId):/root/.microsoft/usersecrets/$(UserSecretsId)</DockerfileRunArguments>
  </PropertyGroup>

  <!-- MacOS/Linux properties -->
  <PropertyGroup Condition="'$(os)' == 'UNIX'">
    <DockerfileRunArguments>-v $(HOME)/.microsoft/usersecrets/$(UserSecretsId):/root/.microsoft/usersecrets/$(UserSecretsId)</DockerfileRunArguments>
  </PropertyGroup>

  <!-- Packages -->
  <ItemGroup>
    <PackageReference Include="DSharpPlus" Version="4.2.0" />
    <PackageReference Include="DSharpPlus.SlashCommands" Version="4.2.0" />
    <PackageReference Include="DSharpPlus.VoiceNext" Version="4.2.0" />
    <PackageReference Include="FluentScheduler" Version="5.5.1" />
    <PackageReference Include="LiteDB" Version="5.0.14" />
    <PackageReference Include="Microsoft.Extensions.Configuration.UserSecrets" Version="7.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="7.0.0" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.17.0" />
    <PackageReference Include="NLog" Version="5.1.0" />
    <PackageReference Include="NLog.Extensions.Logging" Version="5.2.0" />
  </ItemGroup>

  <!-- Ignored files -->
  <ItemGroup>
    <None Remove="Data\Database-log.db" />
    <None Remove="Data\Database.db" />
  </ItemGroup>

  <!-- Common build dependencies -->
  <ItemGroup>
    <None Include="Data\NLog.config" CopyToOutputDirectory="Always" />
  </ItemGroup>

  <!-- Windows build dependencies -->
  <ItemGroup Condition="'$(os)' == 'Windows_NT'">
    <WindowsBinaries Include="$(ProjectDir)Binaries/Windows/*.*" />
  </ItemGroup>

  <Target Name="CopyWinDeps" AfterTargets="Build" Condition="'$(os)' == 'Windows_NT'">
    <Message Text="Copying Windows dependencies" Importance="High" />
    <Copy SourceFiles="@(WindowsBinaries)" DestinationFolder="$(OutDir)" />
  </Target>

  <!-- MacOS build dependencies -->
  <ItemGroup Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))'">
    <MacOSBinaries Include="$(ProjectDir)Binaries/MacOS/*.*" />
  </ItemGroup>

  <Target Name="CopyOSXDeps" AfterTargets="Build" Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))'">
    <Message Text="Copying MacOS dependencies" Importance="High" />
    <Copy SourceFiles="@(MacOSBinaries)" DestinationFolder="$(OutDir)" />
  </Target>
    
  <!-- Linux build dependencies -->
  <ItemGroup Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))'">
    <LinuxBinaries Include="$(ProjectDir)Binaries/Linux/*.*" />
  </ItemGroup>

  <Target Name="CopyLinuxDeps" AfterTargets="Build" Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))'">
    <Message Text="Copying Linux dependencies" Importance="High" />
    <Copy SourceFiles="@(LinuxBinaries)" DestinationFolder="$(OutDir)" />
  </Target>
    
</Project>
